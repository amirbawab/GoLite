%{
// Information for Flex
extern "C" int yylex();
extern "C" int yyparse();
extern "C" int yylineno;
%}


// Define tokens
%token
    tBREAK                  "break"
    tCASE                   "case"
    tCHAN                   "chan"
    tCONST                  "const"
    tCONTINUE               "continue"
    tDEFAULT                "default"
    tDEFER                  "defer"
    tELSE                   "else"
    tFALLTHROUGH            "fallthrough"
    tFOR                    "for"
    tFUNC                   "func"
    tGO                     "go"
    tGOTO                   "goto"
    tIF                     "if"
    tIMPORT                 "import"
    tINTERFACE              "interface"
    tMAP                    "map"
    tPACKAGE                "package"
    tRANGE                  "range"
    tRETURN                 "return"
    tSELECT                 "select"
    tSTRUCT                 "struct"
    tSWITCH                 "switch"
    tTYPE                   "type"
    tVAR                    "var"
    tPRINT                  "print"
    tPRINTLN                "println"
    tAPPEND                 "append"
    tPLUS                   "+"
    tMINUS                  "-"
    tMULTIPLY               "*"
    tDIVIDE                 "/"
    tMODULO                 "%"
    tBIT_AND                "&"
    tBIT_OR                 "|"
    tBIT_XOR                "^"
    tLEFT_SHIFT             "<<"
    tRIGHT_SHIFT            ">>"
    tBIT_CLEAR              "&^"
    tPLUS_EQUAL             "+="
    tMINUS_EQUAL            "-="
    tMULTIPLY_EQUAL         "*="
    tDIVIDE_EQUAL           "/="
    tMODULO_EQUAL           "%="
    tBIT_AND_EQUAL          "&="
    tBIT_OR_EQUAL           "|="
    tBIT_XOR_EQUAL          "^="
    tLEFT_SHIFT_EQUAL       "<<="
    tRIGHT_SHIFT_EQUAL      ">>="
    tBIT_AND_BIT_XOR_EQUAL  "&^="
    tAND                    "&&"
    tOR                     "||"
    tCHAN_ARROW             "<-"
    tINC                    "++"
    tDEC                    "--"
    tIS_EQUAL               "=="
    tLESS_THAN              "<"
    tGREATER_THAN           ">"
    tEQUAL                  "="
    tNOT                    "!"
    tNOT_EQUAL              "!="
    tLESS_THAN_EQUAL        "<="
    tGREATER_THAN_EQUAL     ">="
    tDECLARATION            ":="
    tDOT_DOT_DOT            "..."
    tLEFT_PAR               "("
    tLEFT_SQUARE            "["
    tLEFT_CUR               "{"
    tCOMMA                  ","
    tDOT                    "."
    tRIGHT_PAR              ")"
    tRIGHT_SQUARE           "]"
    tRIGHT_CUR              "}"
    tSEMICOLON              ";"
    tCOLON                  ":"
    ;
